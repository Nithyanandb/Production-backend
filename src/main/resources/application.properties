# Server Configuration
server.port=2000
spring.main.allow-circular-references=true


# PostgreSQL Datasource Configuration
spring.datasource.url=jdbc:postgresql://monorail.proxy.rlwy.net:54226/railway
spring.datasource.username=postgres
spring.datasource.password=AkzvKAKlhjjoHqtDNQXTDZsQxoocLEGQ
spring.datasource.driver-class-name=org.postgresql.Driver


# HikariCP configuration
management.endpoints.web.exposure.include=health
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.auto-commit=true
spring.jpa.open-in-view=false

# Google
spring.security.oauth2.client.registration.google.client-id=339395918942-db6r1kfj7a5fjlrkrp9q5hn3ivjij55v.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:2000/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=email,profile

# Google Provider Configuration
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://www.googleapis.com/oauth2/v4/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email

# GitHub
spring.security.oauth2.client.registration.github.client-id=Ov23liTX8hevhpPLqDye
spring.security.oauth2.client.registration.github.client-secret=88d75b6d44cb54acba2cd3c0ffcc742a5d41e63a
spring.security.oauth2.client.registration.github.redirect-uri=http://localhost:2000/login/oauth2/code/github
spring.security.oauth2.client.registration.github.scope=read:user,user:email

# GitHub Provider Configuration
spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=login

# Frontend redirect URI after OAuth2 success/failure
app.oauth2.redirectUri=http://localhost:3000/auth/callback
#app.oauth2.redirectUri=http://192.168.22.105:3000/auth/callback

# JWT Configuration
app.jwt.expiration=3600000

# CORS Configuration
spring.web.cors.allowed-origins=http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600

# Logging for debugging OAuth2
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.Portfolio.Tracker.Security=DEBUG


button.action.timeout=300000
button.state.cache.size=1000

# Stock API Configuration
stock.api.base-url=https://finnhub.io/api/v1
stock.api.key=ctksb2pr01qn6d7jeekgctksb2pr01qn6d7jeel0



# Finnhub API Configuration
finnhub.api.base-url=https://finnhub.io/api/v1
finnhub.api.key=ctksb2pr01qn6d7jeekgctksb2pr01qn6d7jeel0


spring.datasource.hikari.leak-detection-threshold=2000
